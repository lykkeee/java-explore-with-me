drop table  if exists users, categories, locations, events, compilations, events_compilations, requests, comments, rates;

CREATE TABLE IF NOT EXISTS users (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email varchar NOT NULL,
    name varchar NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
    id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat float NOT NULL,
    lon float NOT NULL,
    CONSTRAINT pk_location PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation varchar NOT NULL,
    category int NOT NULL,
    created_on timestamp NOT NULL,
    description varchar NOT NULL,
    initiator bigint NOT NULL,
    event_date timestamp NOT NULL,
    location bigint NOT NULL,
    paid boolean NOT NULL,
    participant_limit int NOT NULL,
    request_moderation boolean NOT NULL,
    published_on timestamp,
    state varchar NOT NULL,
    title varchar(120) NOT NULL,
    rating float,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT fk_event FOREIGN KEY(category) REFERENCES categories(id),
    CONSTRAINT fk_event_2 FOREIGN KEY(initiator) REFERENCES users(id),
    CONSTRAINT fk_event_3 FOREIGN KEY(location) REFERENCES locations(id)
);

CREATE TABLE IF NOT EXISTS compilations (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned boolean NOT NULL,
    title varchar NOT NULL,
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events_compilations (
    event_id bigint,
    compilation_id bigint,
    CONSTRAINT fk_ev_comp FOREIGN KEY(event_id) REFERENCES events(id),
    CONSTRAINT fk_ev_comp_2 FOREIGN KEY(compilation_id) REFERENCES compilations(id)
);

CREATE TABLE IF NOT EXISTS requests (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event bigint,
    requester bigint,
    created timestamp,
    status varchar,
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT fk_request FOREIGN KEY(event) REFERENCES events(id),
    CONSTRAINT fk_request_2 FOREIGN KEY(requester) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS comments (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    author bigint NOT NULL,
    event bigint NOT NULL,
    text varchar NOT NULL,
    created timestamp NOT NULL,
    edited boolean NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (id),
    CONSTRAINT fk_comment FOREIGN KEY(event) REFERENCES events(id),
    CONSTRAINT fk_comment_2 FOREIGN KEY(author) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS rates (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id bigint NOT NULL,
    event bigint NOT NULL,
    rate float NOT NULL,
    CONSTRAINT pk_rate PRIMARY KEY (id),
    CONSTRAINT fk_rate FOREIGN KEY(event) REFERENCES events(id),
    CONSTRAINT fk_rate_2 FOREIGN KEY(user_id) REFERENCES users(id)
);
